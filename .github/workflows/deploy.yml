name: Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@master
        with:
          php-version: '8.2'
      - uses: actions/checkout@v3

      - name: Copy Env
        run: cp .env.testing .env

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --ignore-platform-reqs

      - name: Generate Key
        run: php artisan key:generate

      - name: Run PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ':memory:'
        run: vendor/bin/phpunit

  deploy:
    runs-on: ubuntu-latest

    environment: production

    needs:
      - tests

    strategy:
      matrix:
        container: ['app']

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Prepare Env
        uses: franzbischoff/replace_envs@main
        env:
          GH_APP_KEY: ${{ secrets.APP_KEY_PRODUCTION }}
          GH_DATABASE: ${{ secrets.DATABASE_PRODUCTION }}
          GH_MAIL: ${{ secrets.MAIL_PRODUCTION }}
          GH_TELEGRAM: ${{ secrets.TELEGRAM_PRODUCTION }}
          GH_CACHE: ${{ secrets.CACHE_PRODUCTION }}
        with:
          from_file: '.env.production'
          to_file: '.env'
          commit: 'false'

      - name: Clean Up
        run: |
          rm .env.*
          rm -rf ./tests

      - name: Lowercase Repository Name
        id: repository
        uses: Entepotenz/change-string-case-action-min-dependencies@v1
        with:
          string: ${{ github.repository }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/production/app/Dockerfile
          push: true
          tags: ghcr.io/${{ steps.repository.outputs.lowercase }}:latest

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          fingerprint: ${{ secrets.VPS_PRIVATE_FINGERPRINT }}
          port: 22
          script: |
            docker pull ghcr.io/${{ steps.repository.outputs.lowercase }}:latest
            docker stop ${{ github.event.repository.name }} || true
            docker rm ${{ github.event.repository.name }} || true
            docker run -d --name ${{ github.event.repository.name }} -p 8080:80 --restart=on-failure:3 -m 128MB ghcr.io/${{ steps.repository.outputs.lowercase }}
