name: Deployment

on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@master
        with:
          php-version: '8.2'
      - uses: actions/checkout@v3

      - name: Copy Env
        run: cp .env.testing .env

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --ignore-platform-reqs

      - name: Generate Key
        run: php artisan key:generate

      - name: Run PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ':memory:'
        run: vendor/bin/phpunit

  deploy:
    runs-on: ubuntu-latest

    needs:
      - tests

    strategy:
      matrix:
        container: ['app']

    steps:
      - uses: actions/checkout@master
      - uses: shivammathur/setup-php@master
        with:
          php-version: '8.2'
      - uses: actions/setup-node@main
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ./package-lock.json

      - uses: shivammathur/setup-php@master

      - name: Prepare Env
        uses: franzbischoff/replace_envs@main
        env:
          GH_APP_KEY: ${{ secrets.APP_KEY_PRODUCTION }}
          GH_DATABASE: ${{ secrets.DATABASE_PRODUCTION }}
          GH_MAIL: ${{ secrets.MAIL_PRODUCTION }}
          GH_TELEGRAM: ${{ secrets.TELEGRAM_PRODUCTION }}
        with:
          from_file: '.env.production'
          to_file: '.env'
          commit: 'false'

      - name: Clean Up
        run: |
          rm .env.*
          rm -rf ./tests

      - name: Install Dependencies
        run: |
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --ignore-platform-reqs --no-dev
          npm install --no-fund --silent
          npm run build

      - name: Prepare Filesystem
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          fingerprint: ${{ secrets.VPS_PRIVATE_FINGERPRINT }}
          port: 22
          script: 'mkdir -p /builds/${{ github.event.repository.name }}/production/${{ github.run_number }}'

      - name: Upload
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          fingerprint: ${{ secrets.VPS_PRIVATE_FINGERPRINT }}
          source: '.'
          target: '/builds/${{ github.event.repository.name }}/production/${{ github.run_number }}'

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          fingerprint: ${{ secrets.VPS_PRIVATE_FINGERPRINT }}
          port: 22
          script: |
            cd /builds/${{ github.event.repository.name }}/production/${{ github.run_number }}
            bash deploy.sh
