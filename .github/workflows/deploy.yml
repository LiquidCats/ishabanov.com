name: Deployment

on:
  workflow_dispatch:
    inputs:
      destination:
        type: choice
        description: 'Environment'
        required: true
        options:
          - production
          - staging

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@master
        with:
          php-version: '8.1'
      - uses: actions/checkout@v3

      - name: Copy .env
        run: cp .env.testing .env

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Run PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ':memory:'
        run: vendor/bin/phpunit

  release:
    runs-on: ubuntu-latest

    needs: tests

    steps:
      - uses: actions/checkout@master

      - name: Prepare .env File
        if: ${{ github.event.inputs.destination == 'staging'}}
        uses: franzbischoff/replace_envs@main
        env:
          GH_APP_KEY: ${{ secrets.APP_KEY_STAGING }}
          GH_DATABASE: ${{ secrets.DATABASE_STAGING }}
          GH_MAIL: ${{ secrets.MAIL_STAGING }}
          GH_TELEGRAM: ${{ secrets.TELEGRAM_STAGING }}
        with:
          from_file: '.env.${{ github.event.inputs.destination }}'
          to_file: '.env'
          commit: 'false'

      - name: Prepare .env File
        if: ${{ github.event.inputs.destination == 'production'}}
        uses: franzbischoff/replace_envs@main
        env:
          GH_APP_KEY: ${{ secrets.APP_KEY_PRODUCTION }}
          GH_DATABASE: ${{ secrets.DATABASE_PRODUCTION }}
          GH_MAIL: ${{ secrets.MAIL_PRODUCTION }}
          GH_TELEGRAM: ${{ secrets.TELEGRAM_PRODUCTION }}
        with:
          from_file: '.env.${{ github.event.inputs.destination }}'
          to_file: '.env'
          commit: 'false'

      - name: Install Node
        uses: actions/setup-node@main
        with:
          cache: 'npm'
          node: 18.x

      - name: Build Frontend
        run: |
          npm install
          npm run build
          rm -rf ./node_modules

      - name: Build Backend
        uses: php-actions/composer@master
        with:
          dev: no
          args: --no-interaction --optimize-autoload

      - name: 'Upload'
        uses: appleboy/scp-action@master
        env:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
        with:
          source: '.'
          target: '~/${{ github.event.repository.name }}'

#      - name: 'Deploy'
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.VPS_HOST }}
#          username: ${{ secrets.VPS_USERNAME }}
#          key: ${{ secrets.VPS_PRIVATE_KEY }}
#          port: 22
#          script: cd ~/${{ github.event.repository.name }} && ./deploy/${{ github.event.inputs.destination }}/run.sh
